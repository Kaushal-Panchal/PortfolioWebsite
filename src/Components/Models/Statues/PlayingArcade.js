/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'
import { Text } from '@react-three/drei'
import { PositionalAudio } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/PlayingArcade.glb')
  const audioRef = useRef();
  useEffect(()=>{
    if(audioRef.current && audioRef.current.context.state!=="running"){
      audioRef.current.context.resume();
    }
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <PositionalAudio distance={2} ref ={audioRef} url="AudioAssets/ArcadeGame.wav"/>
      <Text color={'green'}
      castShadow
      fontSize={1}
      rotation={[0,Math.PI/2,0]}
      lineHeight={1}
      position={[0,20,5]}
       >¥[*.*]¥</Text>
      <group position={[0.04, 5.52, 2.04]}>
        
        <group position={[-0.04, 6.48, -0.34]}>
          <mesh material={materials.Material} geometry={nodes.Cube.geometry} />
          <mesh material={materials.Body} geometry={nodes.Cube_1.geometry} />
        </group>
      </group>
      <group position={[-2.3, 7.83, 6.65]} rotation={[-0.21, 1.57, 0]} scale={[3.92, 3.92, 3.92]}>
        <mesh material={materials.Black} geometry={nodes.Plane004.geometry} />
        <mesh material={materials.Red} geometry={nodes.Plane004_1.geometry} />
        <mesh material={materials.ArcadeScreen} geometry={nodes.Plane004_2.geometry} />
        <pointLight intensity={10} position={[0,1,0.5]} distance={7} color={'green'}/>
        <mesh material={materials.ArcadeGlow} geometry={nodes.Plane004_3.geometry} />
        <mesh material={materials.Logo} geometry={nodes.Plane004_4.geometry} />
        <mesh material={materials.GlowButtons} geometry={nodes.Plane004_5.geometry} />
      </group>
    </group>
  )
}

useGLTF.preload('/PlayingArcade.glb')
