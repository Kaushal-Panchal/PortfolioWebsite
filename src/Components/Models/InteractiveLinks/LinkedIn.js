/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import React, { useRef,  useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'

import { useAnimations } from '@react-three/drei/useAnimations'
import { useStore } from '../../../Hooks/useStore'
import { Vector3 } from 'three'

export default function Model(props) {
  const [playerPosition , visitLink,
    setVisitLink,stopEveryMovement]  = useStore((state)=>[state.playerPosition,
      state.visitLink,state.setVisitLink,state.stopEveryMovement]);
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/LinkedIn.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(()=>{
    actions.RingAction.reset().play();
    return ()=>{
      actions.RingAction.fadeOut(1);
    }
  },[actions.RingAction])
  useEffect(()=>{
    
    const handleKeyPress = (e)=>{
      if(e.code==="Enter" && !visitLink){
        
        setVisitLink(true);
      } 
    }
    window.addEventListener('keypress',handleKeyPress);
    return ()=>{
      window.removeEventListener('keypress',handleKeyPress);
    }
  })
  
  useFrame(() => {
    const playerVector = new Vector3(playerPosition[0],playerPosition[1],playerPosition[2]);
    const objVector = new Vector3(props.groupPosition[0]+props.position[0],
      props.groupPosition[1]+props.position[1],props.groupPosition[2]+props.position[2])
    const distance = playerVector.distanceTo(objVector);
    
    if(visitLink && distance<1.5 ){
        window.open(props.url);       
        stopEveryMovement();
        setVisitLink(false);
    }
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
      castShadow
        name="Ring"
        material={materials.Ring}
        geometry={nodes.Ring.geometry}
        position={[0, 1.15, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.Logo}
        geometry={nodes.LinkedIn.geometry}
        position={[0.05, 1.15, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/LinkedIn.glb')
